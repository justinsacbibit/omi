{
  "name": "mockgoose",
  "description": "Mockgoose is an in memory database mock to allow for testing of applications that rely on Mongoose.",
  "version": "1.10.2",
  "author": {
    "name": "Anthony McCormick",
    "email": "anthony.mccormick AT gmail.com"
  },
  "keywords": [
    "mongodb",
    "mongoose",
    "datastore",
    "nosql",
    "sql",
    "db",
    "database",
    "mock",
    "stub",
    "in memory"
  ],
  "scripts": {
    "test": "./node_modules/jasmine-node/bin/jasmine-node test/ --verbose --color --captureExceptions && grunt jshint"
  },
  "main": "Mockgoose",
  "engines": {
    "node": ">=0.8.0"
  },
  "dependencies": {
    "mongoosemask": "https://github.com/mccormicka/mongoosemask/archive/master.tar.gz",
    "lodash": "~2.1.0",
    "mongodb": "~1.3.19",
    "bunyan": "~0.22.1",
    "mongoose": "^3.8.9"
  },
  "devDependencies": {
    "mongoose": "~3.8.2",
    "mongoose-validator": "~0.2.1",
    "bcrypt": "~0.7.5",
    "grunt": "~0.4.4",
    "jasmine-node": "https://github.com/mccormicka/jasmine-node/archive/exclusive-tests.tar.gz",
    "grunt-contrib-watch": "0.3.1",
    "grunt-contrib-jshint": "0.10.0",
    "grunt-jasmine-node": "0.1.0",
    "node-uuid": "~1.4.1",
    "async": "~0.2.9",
    "grunt-cli": "~0.1.13"
  },
  "bugs": {
    "url": "https://github.com/mccormicka/Mockgoose/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mccormicka/Mockgoose"
  },
  "homepage": "https://github.com/mccormicka/Mockgoose",
  "readmeFilename": "README.md",
  "readme": "[![Build Status](https://travis-ci.org/mccormicka/Mockgoose.png?branch=master)](https://travis-ci.org/mccormicka/Mockgoose)\n\nPlease Share on Twitter if you like #mockgoose\n<a href=\"https://twitter.com/intent/tweet?hashtags=mockgoose&amp;&amp;text=Check%20out%20this%20%23Mongoose%20%23MongoDB%20Mocking%20Framework&amp;tw_p=tweetbutton&amp;url=http%3A%2F%2Fbit.ly%2F19gcHwm&amp;via=omnipitence\" style=\"float:right\">\n<img src=\"https://raw.github.com/mccormicka/Mockgoose/master/twittershare.png\">\n</a>\n\n##What is Mockgoose?\n\nMockgoose is a simplified in memory database that allows you to perform actions on Mongoose Models without having a running instance of MongoDB. \n\nThe main purpose of Mockgoose as you may have guessed from the name is to allow you to mock out your mongoose database during testing so that you do not have to spin up a new database for every test and teardown that same database afterwards.\n\n##Install\nTo install the latest official version, use NPM:\n\n    npm install mockgoose --save-dev\n\nTo run the tests and see what is supported by Mockgoose navigate to the Mockgoose folder and run the test suite\n\n    npm test\n\n##Usage\nYou simply require Mongoose and Mockgoose and wrap Mongoose with Mockgoose.\n\n    var mongoose = require('mongoose');\n    var mockgoose = require('mockgoose');\n\n    mockgoose(mongoose);\n\nOnce Mongoose has been wrapped by Mockgoose all calls to connect() and createConnection() will be intercepted by Mockgoose so that no MongoDB instance is created.\n\n###Options\n___mongoose___ ___required___ Instance of mongoose.\n\n___throwError___ ___optional___ Boolean true/false to throw errors on connection defaults to false.\n\n###Connection Events\nDispatches some but not all of the events supported by Mockgoose\nhttp://mongoosejs.com/docs/api.html#connection_Connection\n\nSupported Events\n```\nconnecting\nconnected\nopen\nerror\n```\n\nCurrently supported model operations are.\n\n    save();\n    create();\n    remove();\n    count();\n    find();\n    findById();\n    findByIdAndRemove();\n    findByIdAndUpdate();\n    findOne();\n    findOneAndRemove();\n    findOneAndUpdate();\n    Update();\n\n##Operators\n\n* [$](http://docs.mongodb.org/manual/reference/operator/update/positional/)\n* [$addToSet](http://docs.mongodb.org/manual/reference/operator/update/addToSet/),\n* [$all](http://docs.mongodb.org/manual/reference/operator/query/all/),\n* [$and](http://docs.mongodb.org/manual/reference/operator/query/and/),\n* [$elemMatch](http://docs.mongodb.org/manual/reference/operator/projection/elemMatch/),\n* [$exists](http://docs.mongodb.org/manual/reference/operator/projection/exists/),\n* [$gt](http://docs.mongodb.org/manual/reference/operator/query/gt/),\n* [$gte](http://docs.mongodb.org/manual/reference/operator/query/gte/),\n* [$in](http://docs.mongodb.org/manual/reference/operator/query/in/),\n* [$inc](http://docs.mongodb.org/manual/reference/operator/update/inc/),\n* [$lt](http://docs.mongodb.org/manual/reference/operator/query/lt/),\n* [$lte](http://docs.mongodb.org/manual/reference/operator/query/lte/),\n* [$ne](http://docs.mongodb.org/manual/reference/operator/query/ne/),\n* [$nin](http://docs.mongodb.org/manual/reference/operator/query/nin/),\n* [$nor](http://docs.mongodb.org/manual/reference/operator/query/nor/),\n* [$not](http://docs.mongodb.org/manual/reference/operator/query/not/),\n* [$or](http://docs.mongodb.org/manual/reference/operator/query/or/),\n* [$pull](http://docs.mongodb.org/manual/reference/operator/update/pull/),\n* [$pullAll](http://docs.mongodb.org/manual/reference/operator/update/pullAll/),\n* [$push](http://docs.mongodb.org/manual/reference/operator/update/push/),\n* [$pushAll](http://docs.mongodb.org/manual/reference/operator/update/pushAll/),\n* [$regex](http://docs.mongodb.org/manual/reference/operator/query/regex/),\n* [$set](http://docs.mongodb.org/manual/reference/operator/update/set/),\n* [$unset](http://docs.mongodb.org/manual/reference/operator/update/unset/)\n\n##Options\n\n* multi   : 0/1 defaults to 0\n* upsert  : true/false defaults to false\n* sort    : one level of sorting for find operations {sort: {name:1}}\n* [skip](http://docs.mongodb.org/manual/reference/method/db.collection.find/#set-the-starting-point-of-the-result-set)\n* [limit](http://docs.mongodb.org/manual/reference/method/db.collection.find/#limit-the-number-of-documents-to-return)\n\n##Validators\nMockgoose includes support for validators and the unique field key.\n\nMockgoose comes with a reset() method that allows you to reset the Mockgoose database\nsimply call \n\n    mockgoose.reset() \n\nto delete all the collections and models in the database\nor call \n    \n    mockgoose.reset('schema name')*\n\nto delete all the associated models for a schema.\n*schema names are case sensitive\n",
  "_id": "mockgoose@1.10.2",
  "dist": {
    "shasum": "6cfbed35b929425c31eb8c1c2ece7b93e39ee0fe"
  },
  "_from": "mockgoose@",
  "_resolved": "https://registry.npmjs.org/mockgoose/-/mockgoose-1.10.2.tgz"
}
